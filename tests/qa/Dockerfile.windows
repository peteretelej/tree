# Windows-based testing environment for tree CLI
# Requires Windows Docker host
FROM mcr.microsoft.com/windows/servercore:ltsc2022

# Set PowerShell as default shell
SHELL ["powershell", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"]

# Install Chocolatey
RUN Set-ExecutionPolicy Bypass -Scope Process -Force; \
    [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; \
    iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

# Install Git and Visual Studio Build Tools
RUN choco install -y git visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --includeRecommended"

# Install Rust (stable and 1.75 for Windows 7 compatibility)
RUN Invoke-WebRequest -Uri 'https://win.rustup.rs/x86_64' -OutFile 'rustup-init.exe'; \
    ./rustup-init.exe -y --default-toolchain stable; \
    Remove-Item rustup-init.exe

# Add Rust to PATH
RUN $env:PATH = $env:USERPROFILE + '\.cargo\bin;' + $env:PATH; \
    [Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine)

# Install Rust 1.75 for Windows 7 compatibility
RUN $env:PATH = $env:USERPROFILE + '\.cargo\bin;' + $env:PATH; \
    rustup install 1.75.0

# Verify Rust installation
RUN $env:PATH = $env:USERPROFILE + '\.cargo\bin;' + $env:PATH; \
    rustc --version; cargo --version

# Set working directory
WORKDIR C:/app

# Copy the entire project
COPY . .

# Default command runs the QA tests
CMD ["powershell", "-File", "tests/qa/qa-docker-test.ps1"]